[
  {
    "course": {
      "name": "üöÄ JavaScript Moderno - Revis√£o Inteligente",
      "image": {
        "desktop": "/vitrine-ml5/mlab5/images/banner_frontend_desktop.png",
        "tablet": "/vitrine-ml5/mlab5/images/banner_frontend_tablet.png",
        "mobile": "http://localhost:3000/vitrine-ml5/mlab5/images/banner_frontend_mobile.png"
      },
      "articles": [
        {
          "position": 1,
          "image": {
            "desktop": "/vitrine-ml5/mlab5/images/banner_frontend_desktop.png",
            "tablet": "/vitrine-ml5/mlab5/images/banner_frontend_tablet.png",
            "mobile": "http://localhost:3000/vitrine-ml5/mlab5/images/banner_frontend_mobile.png"
          }
        },
        {
          "position": 2,
          "headline": "O Papel do JavaScript na Web Moderna",
          "alternativeHeadline": "Paradigmas Principais:",
          "text": "JavaScript moderno (ES6+) combina tr√™s paradigmas principais e conceitos transversais essenciais para o desenvolvimento web atual, integrando-se perfeitamente com HTML5 sem√¢ntico e CSS3 responsivo.",
          "list": [
            "Imperativo e Estruturado: Base fundamental (controle de fluxo, fun√ß√µes, escopo)",
            "Funcional: Fun√ß√µes puras, imutabilidade, arrow functions, map/filter/reduce",
            "Orientado a Objetos: Prototipado e classes ES6, modelagem, encapsulamento",
            "Boas pr√°ticas modernas (const/let, modulariza√ß√£o, imutabilidade)",
            "Manipula√ß√£o de DOM moderna (querySelector, classList, eventos)",
            "APIs modernas do navegador (Fetch, LocalStorage, Web Components)",
            "Assincronismo (Promises, async/await, event loop)"
          ]
        },
        {
          "position": 3,
          "image": {
            "desktop": "/vitrine-ml5/mlab5/cursos/javascript/01/images/paradigmas_js_desktop.png",
            "tablet": "/vitrine-ml5/mlab5/cursos/javascript/01/images/paradigmas_js_tablet.png",
            "mobile": "http://localhost:3000/vitrine-ml5/mlab5/cursos/javascript/01/images/paradigmas_js_mobile.png"
          }
        },
        {
          "position": 4,
          "headline": "Let vs Var vs Const - Declara√ß√µes Modernas",
          "alternativeHeadline": "Compara√ß√£o das Declara√ß√µes:",
          "text": "O ES6 introduziu novas formas de declara√ß√£o de vari√°veis que resolvem problemas do var tradicional e promovem c√≥digo mais previs√≠vel e seguro.",
          "list": [
            "var: Escopo de fun√ß√£o, hoisting, redeclara√ß√£o permitida",
            "let: Escopo de bloco, hoisting sem inicializa√ß√£o, redeclara√ß√£o proibida",
            "const: Escopo de bloco, valor imut√°vel, deve ser inicializada"
          ]
        },
        {
          "position": 5,
          "alternativeHeadline": "Exemplos Pr√°ticos:"
        },
        {
          "position": 6,
          "headline": "Arrow Functions e Escopo L√©xico",
          "alternativeHeadline": "Caracter√≠sticas das Arrow Functions:",
          "text": "Arrow functions n√£o s√£o apenas uma sintaxe mais concisa - elas t√™m comportamento fundamentalmente diferente em rela√ß√£o ao this e ao escopo, seguindo o escopo l√©xico.",
          "list": [
            "Sintaxe concisa para fun√ß√µes simples",
            "N√£o possuem seu pr√≥prio this",
            "N√£o possuem arguments",
            "N√£o podem ser usadas como construtores",
            "Retorno impl√≠cito em express√µes simples"
          ]
        },
        {
          "position": 7,
          "alternativeHeadline": "Compara√ß√£o: Fun√ß√£o Tradicional vs Arrow Function:"
        },
        {
          "position": 8,
          "headline": "Template Literals e Interpola√ß√£o",
          "alternativeHeadline": "Vantagens dos Template Literals:",
          "text": "Template literals (template strings) revolucionaram a forma de trabalhar com strings em JavaScript, oferecendo interpola√ß√£o de vari√°veis e strings multilinhas.",
          "list": [
            "Interpola√ß√£o de vari√°veis com ${}",
            "Strings multilinhas sem escape",
            "Express√µes JavaScript dentro de ${}",
            "Melhor legibilidade do c√≥digo",
            "Suporte a fun√ß√µes de tag"
          ]
        },
        {
          "position": 9,
          "headline": "${titulo}",
          "alternativeHeadline": "Exemplos de Template Literals:",
          "text": "Idade: ${idade}",
          "list": [
            "${usuario}"
          ],
          "image": {
            "desktop": "/vitrine-ml5/mlab5/cursos/javascript/01/images/template_literals_desktop.png",
            "tablet": "/vitrine-ml5/mlab5/cursos/javascript/01/images/template_literals_tablet.png",
            "mobile": "http://localhost:3000/vitrine-ml5/mlab5/cursos/javascript/01/images/template_literals_mobile.png"
          }
        },
        {
          "position": 10,
          "headline": "Destructuring - Desestrutura√ß√£o Moderna",
          "alternativeHeadline": "Tipos de Desestrutura√ß√£o:",
          "text": "A desestrutura√ß√£o permite extrair valores de arrays ou propriedades de objetos de forma concisa e elegante, simplificando o acesso a dados complexos.",
          "list": [
            "Arrays: Extra√ß√£o por posi√ß√£o",
            "Objetos: Extra√ß√£o por propriedade",
            "Aninhada: Acesso a propriedades profundas",
            "Com valores padr√£o: Fallback para valores undefined"
          ]
        },
        {
          "position": 11,
          "alternativeHeadline": "Exemplos de Desestrutura√ß√£o:"
        },
        {
          "position": 12,
          "headline": "Spread e Rest Operators",
          "alternativeHeadline": "Usos do Spread Operator:",
          "text": "Os operadores spread (...) e rest (...) s√£o fundamentais para trabalhar com arrays e objetos de forma moderna e eficiente.",
          "list": [
            "Copiar arrays e objetos",
            "Combinar arrays",
            "Passar argumentos para fun√ß√µes",
            "Clonagem profunda (com cuidado)",
            "Capturar argumentos restantes",
            "Desestrutura√ß√£o de arrays",
            "Par√¢metros de fun√ß√£o flex√≠veis"
          ]
        },
        {
          "position": 13,
          "alternativeHeadline": "Exemplos de Spread e Rest:"
        },
        {
          "position": 14,
          "headline": "Pr√°tica: Converter C√≥digo \"Antigo\" em ES6",
          "alternativeHeadline": "Exerc√≠cio de Convers√£o:",
          "text": "Vamos praticar convertendo c√≥digo JavaScript tradicional para a sintaxe moderna ES6+, aplicando todas as t√©cnicas aprendidas.",
          "list": [
            "Substituir var por let/const",
            "Converter fun√ß√µes para arrow functions",
            "Usar template literals",
            "Aplicar desestrutura√ß√£o",
            "Utilizar spread/rest operators"
          ]
        },
        {
          "position": 15,
          "alternativeHeadline": "C√≥digo para Converter:",
          "image": {
            "desktop": "/vitrine-ml5/mlab5/cursos/javascript/01/images/conversao_codigo_desktop.png",
            "tablet": "/vitrine-ml5/mlab5/cursos/javascript/01/images/conversao_codigo_tablet.png",
            "mobile": "http://localhost:3000/vitrine-ml5/mlab5/cursos/javascript/01/images/conversao_codigo_mobile.png"
          }
        }
      ],
      "exercise": {
        "headline": "Exerc√≠cio",
        "text": "Converta o seguinte c√≥digo JavaScript \"antigo\" para ES6+ moderno:",
        "steps": [
          "T√≠tulo = Convers√£o de C√≥digo JavaScript para ES6+",
          "Substitua todas as declara√ß√µes var por let/const apropriadas",
          "Converta fun√ß√µes tradicionais para arrow functions",
          "Use template literals para concatena√ß√£o de strings",
          "Aplique desestrutura√ß√£o em objetos e arrays",
          "Utilize spread/rest operators onde apropriado",
          "Implemente array methods modernos (map, filter, reduce)"
        ]
      },
      "controls": {
        "templates": [
          "/vitrine-ml5/mlab5/templates/classico.html",
          "/vitrine-ml5/mlab5/templates/moderno.html",
          "/vitrine-ml5/mlab5/templates/dark_mode.html"
        ],
        "styles": {
          "background": "#ffffff",
          "foreground": "#000000",
          "fontFamily": "Arial, sans-serif"
        }
      },
      "playground": {
        "url": "http://localhost:3000/vitrine-ml5/mlab5/playground"
      }
    }
  },
  {
    "course": {
      "name": "üßÆ JavaScript Funcional - Map, Filter, Reduce",
      "image": {
        "desktop": "/vitrine-ml5/mlab5/images/banner_frontend_desktop.png",
        "tablet": "/vitrine-ml5/mlab5/images/banner_frontend_tablet.png",
        "mobile": "http://localhost:3000/vitrine-ml5/mlab5/images/banner_frontend_mobile.png"
      },
      "articles": [
        {
          "position": 1,
          "image": {
            "desktop": "/vitrine-ml5/mlab5/images/banner_frontend_desktop.png",
            "tablet": "/vitrine-ml5/mlab5/images/banner_frontend_tablet.png",
            "mobile": "http://localhost:3000/vitrine-ml5/mlab5/images/banner_frontend_mobile.png"
          }
        },
        {
          "position": 2,
          "headline": "Programa√ß√£o Funcional em JavaScript",
          "alternativeHeadline": "Princ√≠pios da Programa√ß√£o Funcional:",
          "text": "A programa√ß√£o funcional √© um paradigma que trata computa√ß√£o como avalia√ß√£o de fun√ß√µes matem√°ticas, enfatizando fun√ß√µes puras, imutabilidade e transforma√ß√£o de dados atrav√©s de m√©todos como map, filter e reduce.",
          "list": [
            "Fun√ß√µes Puras: Sem efeitos colaterais, resultado previs√≠vel",
            "Imutabilidade: Dados n√£o s√£o modificados, mas transformados",
            "Composi√ß√£o: Construir fun√ß√µes complexas a partir de simples",
            "Transforma√ß√£o: Dados fluem atrav√©s de transforma√ß√µes",
            "Declarativo: Descrever o que fazer, n√£o como fazer"
          ]
        },
        {
          "position": 3,
          "image": {
            "desktop": "/vitrine-ml5/mlab5/cursos/javascript/02/images/programacao_funcional_desktop.png",
            "tablet": "/vitrine-ml5/mlab5/cursos/javascript/02/images/programacao_funcional_tablet.png",
            "mobile": "http://localhost:3000/vitrine-ml5/mlab5/cursos/javascript/02/images/programacao_funcional_mobile.png"
          }
        },
        {
          "position": 4,
          "headline": "Fun√ß√µes Puras e Efeitos Colaterais",
          "alternativeHeadline": "Caracter√≠sticas de Fun√ß√µes Puras:",
          "text": "Fun√ß√µes puras s√£o o cora√ß√£o da programa√ß√£o funcional. Elas sempre retornam o mesmo resultado para os mesmos argumentos e n√£o produzem efeitos colaterais, tornando o c√≥digo mais previs√≠vel e test√°vel.",
          "list": [
            "Resultado previs√≠vel (mesma entrada = mesma sa√≠da)",
            "Sem efeitos colaterais (n√£o modifica estado externo)",
            "N√£o depende de vari√°veis externas mut√°veis",
            "Facilmente test√°veis e debugg√°veis",
            "Permitem otimiza√ß√µes e memoiza√ß√£o"
          ]
        },
        {
          "position": 5,
          "alternativeHeadline": "Exemplos: Fun√ß√µes Puras vs Impuras:"
        },
        {
          "position": 6,
          "headline": "Array Methods Modernos: Map",
          "alternativeHeadline": "Caracter√≠sticas do Map:",
          "text": "O m√©todo map() transforma cada elemento de um array aplicando uma fun√ß√£o, retornando um novo array com os elementos transformados. √â fundamental para transforma√ß√£o de dados.",
          "list": [
            "Retorna um novo array (n√£o modifica o original)",
            "Aplica fun√ß√£o a cada elemento",
            "Mant√©m o mesmo tamanho do array original",
            "Composi√ß√£o com outros m√©todos funcionais"
          ]
        },
        {
          "position": 7,
          "headline": "${produto.nome}",
          "alternativeHeadline": "Exemplos Pr√°ticos do Map:",
          "text": "R$ ${produto.preco.toFixed(2)}"
        },
        {
          "position": 8,
          "headline": "Array Methods Modernos: Filter",
          "alternativeHeadline": "Caracter√≠sticas do Filter:",
          "text": "O m√©todo filter() cria um novo array com todos os elementos que passam no teste implementado pela fun√ß√£o fornecida. √â essencial para sele√ß√£o de dados.",
          "list": [
            "Retorna array filtrado (n√£o modifica original)",
            "Fun√ß√£o deve retornar boolean",
            "Pode retornar array menor que o original",
            "Composi√ß√£o com map e reduce"
          ]
        },
        {
          "position": 9,
          "alternativeHeadline": "Exemplos Pr√°ticos do Filter:"
        },
        {
          "position": 10,
          "headline": "Array Methods Modernos: Reduce",
          "alternativeHeadline": "Caracter√≠sticas do Reduce:",
          "text": "O m√©todo reduce() executa uma fun√ß√£o redutora para cada elemento do array, resultando em um √∫nico valor de retorno. √â poderoso para agrega√ß√µes e transforma√ß√µes complexas.",
          "list": [
            "Reduz array a um √∫nico valor",
            "Acumula resultado atrav√©s de itera√ß√µes",
            "Valor inicial opcional",
            "Vers√°til para diferentes opera√ß√µes"
          ]
        },
        {
          "position": 11,
          "alternativeHeadline": "Exemplos Pr√°ticos do Reduce:",
          "image": {
            "desktop": "/vitrine-ml5/mlab5/cursos/javascript/02/images/array_methods_desktop.png",
            "tablet": "/vitrine-ml5/mlab5/cursos/javascript/02/images/array_methods_tablet.png",
            "mobile": "http://localhost:3000/vitrine-ml5/mlab5/cursos/javascript/02/images/array_methods_mobile.png"
          }
        },
        {
          "position": 12,
          "headline": "Composi√ß√£o de M√©todos Funcionais",
          "alternativeHeadline": "Vantagens da Composi√ß√£o:",
          "text": "A verdadeira for√ßa da programa√ß√£o funcional est√° na composi√ß√£o de m√©todos como map, filter e reduce, criando pipelines de transforma√ß√£o de dados poderosos e leg√≠veis.",
          "list": [
            "C√≥digo declarativo e leg√≠vel",
            "Transforma√ß√µes em pipeline",
            "Reutiliza√ß√£o de l√≥gica",
            "Facilita debugging",
            "Performance otimizada"
          ]
        },
        {
          "position": 13,
          "headline": "${produto.nome}",
          "alternativeHeadline": "Exemplos de Composi√ß√£o:",
          "text": "Total de produtos: ${stats.quantidade}"
        },
        {
          "position": 14,
          "headline": "Pr√°tica: Transformar Listas em HTML Dinamicamente",
          "alternativeHeadline": "Objetivos da Pr√°tica:",
          "text": "Vamos aplicar todos os conceitos de programa√ß√£o funcional para criar uma aplica√ß√£o que transforma dados em HTML de forma din√¢mica e elegante.",
          "list": [
            "Usar fun√ß√µes puras para transforma√ß√µes",
            "Aplicar map, filter e reduce",
            "Compor m√©todos em pipeline",
            "Gerar HTML din√¢mico",
            "Implementar funcionalidades interativas"
          ]
        },
        {
          "position": 15,
          "headline": "${funcionario.nome}",
          "alternativeHeadline": "Exemplo Pr√°tico Completo:",
          "text": "${funcionario.cargo}",
          "image": {
            "desktop": "/vitrine-ml5/mlab5/cursos/javascript/02/images/html_dinamico_desktop.png",
            "tablet": "/vitrine-ml5/mlab5/cursos/javascript/02/images/html_dinamico_tablet.png",
            "mobile": "http://localhost:3000/vitrine-ml5/mlab5/cursos/javascript/02/images/html_dinamico_mobile.png"
          }
        }
      ],
      "exercise": {
        "headline": "Exerc√≠cio",
        "text": "Implemente uma aplica√ß√£o funcional para gerenciar produtos de e-commerce:",
        "steps": [
          "T√≠tulo = Sistema de Produtos com Programa√ß√£o Funcional",
          "Use fun√ß√µes puras para todas as transforma√ß√µes",
          "Implemente map para transformar dados de produtos",
          "Use filter para buscar e filtrar produtos",
          "Aplique reduce para calcular estat√≠sticas",
          "Componha m√©todos em pipeline de transforma√ß√£o",
          "Gere HTML din√¢mico com cards de produtos"
        ]
      },
      "controls": {
        "templates": [
          "/vitrine-ml5/mlab5/templates/classico.html",
          "/vitrine-ml5/mlab5/templates/moderno.html",
          "/vitrine-ml5/mlab5/templates/dark_mode.html"
        ],
        "styles": {
          "background": "#ffffff",
          "foreground": "#000000",
          "fontFamily": "Arial, sans-serif"
        }
      },
      "playground": {
        "url": "http://localhost:3000/vitrine-ml5/mlab5/playground"
      }
    }
  },
  {
    "course": {
      "name": "üèóÔ∏è JavaScript OO - Classes ES6 e Prot√≥tipos",
      "image": {
        "desktop": "/vitrine-ml5/mlab5/images/banner_frontend_desktop.png",
        "tablet": "/vitrine-ml5/mlab5/images/banner_frontend_tablet.png",
        "mobile": "http://localhost:3000/vitrine-ml5/mlab5/images/banner_frontend_mobile.png"
      },
      "articles": [
        {
          "position": 1,
          "image": {
            "desktop": "/vitrine-ml5/mlab5/images/banner_frontend_desktop.png",
            "tablet": "/vitrine-ml5/mlab5/images/banner_frontend_tablet.png",
            "mobile": "http://localhost:3000/vitrine-ml5/mlab5/images/banner_frontend_mobile.png"
          }
        },
        {
          "position": 2,
          "headline": "Orienta√ß√£o a Objetos em JavaScript",
          "alternativeHeadline": "Conceitos Fundamentais:",
          "text": "JavaScript √© uma linguagem baseada em prot√≥tipos, mas o ES6 introduziu a sintaxe de classes que facilita a programa√ß√£o orientada a objetos. Entender ambos os conceitos √© fundamental para criar c√≥digo modular e reutiliz√°vel.",
          "list": [
            "Prot√≥tipos: Base da heran√ßa em JavaScript",
            "Classes ES6: Sintaxe moderna para OO",
            "Encapsulamento: Controle de acesso a propriedades",
            "Heran√ßa: Reutiliza√ß√£o de c√≥digo",
            "Polimorfismo: M√∫ltiplas formas de um mesmo m√©todo"
          ]
        },
        {
          "position": 3,
          "image": {
            "desktop": "/vitrine-ml5/mlab5/cursos/javascript/03/images/oo_javascript_desktop.png",
            "tablet": "/vitrine-ml5/mlab5/cursos/javascript/03/images/oo_javascript_tablet.png",
            "mobile": "http://localhost:3000/vitrine-ml5/mlab5/cursos/javascript/03/images/oo_javascript_mobile.png"
          }
        },
        {
          "position": 4,
          "headline": "Prot√≥tipos e Heran√ßa",
          "alternativeHeadline": "Caracter√≠sticas dos Prot√≥tipos:",
          "text": "Em JavaScript, todos os objetos t√™m um prot√≥tipo interno que permite heran√ßa de propriedades e m√©todos. Esta √© a base fundamental da orienta√ß√£o a objetos na linguagem.",
          "list": [
            "Cadeia de prot√≥tipos (prototype chain)",
            "Heran√ßa din√¢mica",
            "Compartilhamento de m√©todos",
            "Acesso via __proto__ ou Object.getPrototypeOf()"
          ]
        },
        {
          "position": 5,
          "alternativeHeadline": "Exemplos de Prot√≥tipos:"
        },
        {
          "position": 6,
          "headline": "Classes ES6 - Sintaxe Moderna",
          "alternativeHeadline": "Caracter√≠sticas das Classes:",
          "text": "As classes ES6 fornecem uma sintaxe mais limpa e familiar para criar objetos e implementar heran√ßa, mas ainda s√£o baseadas em prot√≥tipos por baixo dos panos.",
          "list": [
            "Sintaxe declarativa e limpa",
            "M√©todo constructor para inicializa√ß√£o",
            "M√©todos de inst√¢ncia e est√°ticos",
            "Heran√ßa com extends",
            "Super para acessar classe pai"
          ]
        },
        {
          "position": 7,
          "alternativeHeadline": "Exemplos de Classes ES6:"
        },
        {
          "position": 8,
          "headline": "Encapsulamento e Abstra√ß√£o",
          "alternativeHeadline": "N√≠veis de Encapsulamento:",
          "text": "O encapsulamento controla o acesso √†s propriedades e m√©todos de uma classe, enquanto a abstra√ß√£o simplifica a interface, escondendo detalhes de implementa√ß√£o.",
          "list": [
            "P√∫blico: Acess√≠vel de qualquer lugar",
            "Privado: Apenas dentro da classe (ES2022)",
            "Protegido: Classe e subclasses (conven√ß√£o)",
            "Readonly: Apenas leitura"
          ]
        },
        {
          "position": 9,
          "alternativeHeadline": "Exemplos de Encapsulamento:",
          "image": {
            "desktop": "/vitrine-ml5/mlab5/cursos/javascript/03/images/encapsulamento_desktop.png",
            "tablet": "/vitrine-ml5/mlab5/cursos/javascript/03/images/encapsulamento_tablet.png",
            "mobile": "http://localhost:3000/vitrine-ml5/mlab5/cursos/javascript/03/images/encapsulamento_mobile.png"
          }
        },
        {
          "position": 10,
          "headline": "Composi√ß√£o vs Heran√ßa",
          "alternativeHeadline": "Vantagens da Composi√ß√£o:",
          "text": "Em JavaScript, a composi√ß√£o muitas vezes √© prefer√≠vel √† heran√ßa, oferecendo maior flexibilidade e evitando problemas da heran√ßa profunda.",
          "list": [
            "Maior flexibilidade",
            "Evita hierarquias complexas",
            "Reutiliza√ß√£o granular",
            "Princ√≠pio \"favor composi√ß√£o sobre heran√ßa\""
          ]
        },
        {
          "position": 11,
          "alternativeHeadline": "Exemplos de Composi√ß√£o:"
        },
        {
          "position": 12,
          "headline": "Pr√°tica: Criar Componente Reutiliz√°vel",
          "alternativeHeadline": "Objetivos da Pr√°tica:",
          "text": "Vamos criar um componente de card interativo reutiliz√°vel usando classes ES6, demonstrando encapsulamento, heran√ßa e composi√ß√£o na pr√°tica.",
          "list": [
            "Criar classe base para componente",
            "Implementar encapsulamento adequado",
            "Usar heran√ßa para especializa√ß√£o",
            "Aplicar composi√ß√£o para funcionalidades",
            "Integrar com DOM de forma limpa"
          ]
        },
        {
          "position": 13,
          "headline": "${this.produto.nome}",
          "alternativeHeadline": "Componente Card Interativo:",
          "text": "${this.produto.descricao}",
          "image": {
            "desktop": "/vitrine-ml5/mlab5/cursos/javascript/03/images/componente_reutilizavel_desktop.png",
            "tablet": "/vitrine-ml5/mlab5/cursos/javascript/03/images/componente_reutilizavel_tablet.png",
            "mobile": "http://localhost:3000/vitrine-ml5/mlab5/cursos/javascript/03/images/componente_reutilizavel_mobile.png"
          }
        }
      ],
      "exercise": {
        "headline": "Exerc√≠cio",
        "text": "Crie um sistema de componentes reutiliz√°veis usando classes ES6:",
        "steps": [
          "T√≠tulo = Sistema de Componentes com Classes ES6",
          "Classe base Component com m√©todos abstratos",
          "Implemente encapsulamento com propriedades privadas",
          "Crie heran√ßa para componentes especializados",
          "Use composi√ß√£o para funcionalidades extras",
          "Implemente sistema de eventos customizados",
          "Crie componentes para Modal, Accordion e Tabs"
        ]
      },
      "controls": {
        "templates": [
          "/vitrine-ml5/mlab5/templates/classico.html",
          "/vitrine-ml5/mlab5/templates/moderno.html",
          "/vitrine-ml5/mlab5/templates/dark_mode.html"
        ],
        "styles": {
          "background": "#ffffff",
          "foreground": "#000000",
          "fontFamily": "Arial, sans-serif"
        }
      },
      "playground": {
        "url": "http://localhost:3000/vitrine-ml5/mlab5/playground"
      }
    }
  },
  {
    "course": {
      "name": "üåê DOM e Eventos Modernos",
      "image": {
        "desktop": "/vitrine-ml5/mlab5/images/banner_frontend_desktop.png",
        "tablet": "/vitrine-ml5/mlab5/images/banner_frontend_tablet.png",
        "mobile": "http://localhost:3000/vitrine-ml5/mlab5/images/banner_frontend_mobile.png"
      },
      "articles": [
        {
          "position": 1,
          "image": {
            "desktop": "/vitrine-ml5/mlab5/images/banner_frontend_desktop.png",
            "tablet": "/vitrine-ml5/mlab5/images/banner_frontend_tablet.png",
            "mobile": "http://localhost:3000/vitrine-ml5/mlab5/images/banner_frontend_mobile.png"
          }
        },
        {
          "position": 2,
          "headline": "Manipula√ß√£o Moderna do DOM",
          "alternativeHeadline": "Conceitos Fundamentais:",
          "text": "O DOM (Document Object Model) √© a representa√ß√£o em √°rvore da estrutura HTML, permitindo que JavaScript manipule elementos, estilos e comportamentos de forma din√¢mica e eficiente.",
          "list": [
            "DOM como √°rvore: Estrutura hier√°rquica de n√≥s",
            "Seletores modernos: querySelector e querySelectorAll",
            "Manipula√ß√£o de classes: classList API",
            "Dataset: Acesso a data-* attributes",
            "Delega√ß√£o de eventos: Performance otimizada"
          ]
        },
        {
          "position": 3,
          "image": {
            "desktop": "/vitrine-ml5/mlab5/cursos/javascript/04/images/dom_moderno_desktop.png",
            "tablet": "/vitrine-ml5/mlab5/cursos/javascript/04/images/dom_moderno_tablet.png",
            "mobile": "http://localhost:3000/vitrine-ml5/mlab5/cursos/javascript/04/images/dom_moderno_mobile.png"
          }
        },
        {
          "position": 4,
          "headline": "Seletores Modernos: querySelector e querySelectorAll",
          "alternativeHeadline": "Vantagens dos Seletores Modernos:",
          "text": "Os m√©todos querySelector e querySelectorAll revolucionaram a sele√ß√£o de elementos, permitindo usar seletores CSS avan√ßados de forma nativa.",
          "list": [
            "Sintaxe CSS familiar",
            "Seletores complexos em uma √∫nica chamada",
            "Performance otimizada",
            "Suporte a pseudo-seletores",
            "Flexibilidade m√°xima"
          ]
        },
        {
          "position": 5,
          "alternativeHeadline": "Exemplos de Seletores Modernos:"
        },
        {
          "position": 6,
          "headline": "Manipula√ß√£o de Classes com classList",
          "alternativeHeadline": "M√©todos do classList:",
          "text": "A API classList oferece m√©todos modernos e eficientes para manipular classes CSS, substituindo o antigo className por uma interface mais robusta.",
          "list": [
            "add() - Adiciona classes",
            "remove() - Remove classes",
            "toggle() - Alterna classes",
            "contains() - Verifica se classe existe",
            "replace() - Substitui uma classe por outra"
          ]
        },
        {
          "position": 7,
          "alternativeHeadline": "Exemplos de classList:"
        },
        {
          "position": 8,
          "headline": "Dataset - Acesso a Data Attributes",
          "alternativeHeadline": "Vantagens do Dataset:",
          "text": "A propriedade dataset fornece acesso limpo aos atributos data-*, permitindo armazenar informa√ß√µes customizadas nos elementos HTML de forma padronizada.",
          "list": [
            "Acesso padronizado a data attributes",
            "Convers√£o autom√°tica de nomes (kebab-case ‚Üí camelCase)",
            "Integra√ß√£o com HTML sem√¢ntico",
            "Dados customizados nos elementos",
            "Facilita configura√ß√£o de componentes"
          ]
        },
        {
          "position": 9,
          "headline": "Smartphone XYZ",
          "alternativeHeadline": "Exemplos de Dataset:"
        },
        {
          "position": 10,
          "headline": "Delega√ß√£o de Eventos e Performance",
          "alternativeHeadline": "Vantagens da Delega√ß√£o:",
          "text": "A delega√ß√£o de eventos √© uma t√©cnica fundamental para otimizar performance e gerenciar eventos em elementos din√¢micos, especialmente √∫til em listas e componentes interativos.",
          "list": [
            "Performance otimizada",
            "Funciona com elementos din√¢micos",
            "Menos event listeners",
            "Gerenciamento centralizado",
            "Facilita manuten√ß√£o"
          ]
        },
        {
          "position": 11,
          "alternativeHeadline": "Exemplos de Delega√ß√£o de Eventos:",
          "image": {
            "desktop": "/vitrine-ml5/mlab5/cursos/javascript/04/images/delegacao_eventos_desktop.png",
            "tablet": "/vitrine-ml5/mlab5/cursos/javascript/04/images/delegacao_eventos_tablet.png",
            "mobile": "http://localhost:3000/vitrine-ml5/mlab5/cursos/javascript/04/images/delegacao_eventos_mobile.png"
          }
        },
        {
          "position": 12,
          "headline": "Pr√°tica: Menu Interativo e Modal",
          "alternativeHeadline": "Objetivos da Pr√°tica:",
          "text": "Vamos criar um menu interativo responsivo e um sistema de modal usando todas as t√©cnicas modernas de manipula√ß√£o do DOM aprendidas.",
          "list": [
            "Criar menu responsivo com anima√ß√µes",
            "Implementar sistema de modal reutiliz√°vel",
            "Usar delega√ß√£o de eventos eficientemente",
            "Aplicar dataset para configura√ß√£o",
            "Implementar acessibilidade b√°sica"
          ]
        },
        {
          "position": 13,
          "alternativeHeadline": "Menu Interativo e Modal:",
          "text": "Conte√∫do do modal"
        }
      ],
      "exercise": {
        "headline": "Exerc√≠cio",
        "text": "Crie uma interface interativa completa com DOM moderno:",
        "steps": [
          "T√≠tulo = Interface Interativa com DOM Moderno",
          "Menu responsivo com anima√ß√µes suaves",
          "Sistema de modal reutiliz√°vel e acess√≠vel",
          "Delega√ß√£o de eventos para performance",
          "Uso de dataset para configura√ß√£o",
          "Manipula√ß√£o de classes com classList",
          "Implementa√ß√£o de acessibilidade b√°sica"
        ]
      },
      "controls": {
        "templates": [
          "/vitrine-ml5/mlab5/templates/classico.html",
          "/vitrine-ml5/mlab5/templates/moderno.html",
          "/vitrine-ml5/mlab5/templates/dark_mode.html"
        ],
        "styles": {
          "background": "#ffffff",
          "foreground": "#000000",
          "fontFamily": "Arial, sans-serif"
        }
      },
      "playground": {
        "url": "http://localhost:3000/vitrine-ml5/mlab5/playground"
      }
    }
  },
  {
    "course": {
      "name": "‚ö° Assincronismo e Comunica√ß√£o",
      "image": {
        "desktop": "/vitrine-ml5/mlab5/images/banner_frontend_desktop.png",
        "tablet": "/vitrine-ml5/mlab5/images/banner_frontend_tablet.png",
        "mobile": "http://localhost:3000/vitrine-ml5/mlab5/images/banner_frontend_mobile.png"
      },
      "articles": [
        {
          "position": 1,
          "image": {
            "desktop": "/vitrine-ml5/mlab5/images/banner_frontend_desktop.png",
            "tablet": "/vitrine-ml5/mlab5/images/banner_frontend_tablet.png",
            "mobile": "http://localhost:3000/vitrine-ml5/mlab5/images/banner_frontend_mobile.png"
          }
        },
        {
          "position": 2,
          "headline": "Introdu√ß√£o ao Event Loop",
          "alternativeHeadline": "Componentes do Event Loop:",
          "text": "O Event Loop √© o mecanismo que permite JavaScript executar c√≥digo de forma ass√≠ncrona em um ambiente single-threaded. Entender como funciona √© fundamental para escrever c√≥digo ass√≠ncrono eficiente.",
          "list": [
            "Call Stack: Pilha de execu√ß√£o principal",
            "Web APIs: setTimeout, DOM, AJAX",
            "Callback Queue: Fila de callbacks prontos",
            "Microtask Queue: Promises e queueMicrotask",
            "Event Loop: Coordena a execu√ß√£o"
          ]
        },
        {
          "position": 3,
          "image": {
            "desktop": "/vitrine-ml5/mlab5/cursos/javascript/05/images/event_loop_desktop.png",
            "tablet": "/vitrine-ml5/mlab5/cursos/javascript/05/images/event_loop_tablet.png",
            "mobile": "http://localhost:3000/vitrine-ml5/mlab5/cursos/javascript/05/images/event_loop_mobile.png"
          }
        },
        {
          "position": 4,
          "headline": "Promises - Fundamentos",
          "alternativeHeadline": "Estados de uma Promise:",
          "text": "Promises representam o resultado eventual de uma opera√ß√£o ass√≠ncrona, oferecendo uma alternativa mais limpa aos callbacks aninhados e facilitando o tratamento de erros.",
          "list": [
            "Pending: Estado inicial, nem fulfilled nem rejected",
            "Fulfilled: Opera√ß√£o completada com sucesso",
            "Rejected: Opera√ß√£o falhou",
            "Settled: Promise foi resolved ou rejected"
          ]
        },
        {
          "position": 5,
          "alternativeHeadline": "Exemplos de Promises:"
        },
        {
          "position": 6,
          "headline": "Async/Await - Sintaxe Moderna",
          "alternativeHeadline": "Vantagens do Async/Await:",
          "text": "Async/await √© uma sintaxe mais limpa para trabalhar com Promises, tornando o c√≥digo ass√≠ncrono mais leg√≠vel e similar ao c√≥digo s√≠ncrono tradicional.",
          "list": [
            "C√≥digo mais leg√≠vel e limpo",
            "Tratamento de erros simplificado",
            "Debugging mais f√°cil",
            "Composi√ß√£o de opera√ß√µes ass√≠ncronas",
            "Sintaxe familiar para desenvolvedores"
          ]
        },
        {
          "position": 7,
          "alternativeHeadline": "Exemplos de Async/Await:"
        },
        {
          "position": 8,
          "headline": "Fetch API - Requisi√ß√µes HTTP Modernas",
          "alternativeHeadline": "Caracter√≠sticas da Fetch API:",
          "text": "A Fetch API √© a forma moderna de fazer requisi√ß√µes HTTP em JavaScript, oferecendo uma interface mais limpa e flex√≠vel que o antigo XMLHttpRequest.",
          "list": [
            "Baseada em Promises",
            "Interface mais limpa",
            "Suporte a streaming",
            "Integra√ß√£o com Service Workers",
            "Configura√ß√µes flex√≠veis"
          ]
        },
        {
          "position": 9,
          "alternativeHeadline": "Exemplos de Fetch API:",
          "image": {
            "desktop": "/vitrine-ml5/mlab5/cursos/javascript/05/images/fetch_api_desktop.png",
            "tablet": "/vitrine-ml5/mlab5/cursos/javascript/05/images/fetch_api_tablet.png",
            "mobile": "http://localhost:3000/vitrine-ml5/mlab5/cursos/javascript/05/images/fetch_api_mobile.png"
          }
        },
        {
          "position": 10,
          "headline": "Tratamento de Erros Robusto",
          "alternativeHeadline": "Estrat√©gias de Tratamento:",
          "text": "O tratamento adequado de erros em c√≥digo ass√≠ncrono √© crucial para criar aplica√ß√µes robustas e com boa experi√™ncia do usu√°rio.",
          "list": [
            "Try/catch com async/await",
            ".catch() com Promises",
            "Tratamento espec√≠fico por tipo de erro",
            "Retry autom√°tico",
            "Fallbacks e valores padr√£o"
          ]
        },
        {
          "position": 11,
          "alternativeHeadline": "Exemplos de Tratamento de Erros:"
        },
        {
          "position": 12,
          "headline": "Pr√°tica: Aplica√ß√£o com Carregamento de Dados",
          "alternativeHeadline": "Objetivos da Pr√°tica:",
          "text": "Vamos criar uma aplica√ß√£o completa que demonstra carregamento ass√≠ncrono de dados, tratamento de erros e interface responsiva.",
          "list": [
            "Carregar dados de API externa",
            "Implementar loading states",
            "Tratar erros graciosamente",
            "Implementar cache local",
            "Criar interface responsiva"
          ]
        },
        {
          "position": 13,
          "headline": "Erro ao carregar dados",
          "alternativeHeadline": "Aplica√ß√£o Completa:",
          "text": "Carregando dados...",
          "image": {
            "desktop": "/vitrine-ml5/mlab5/cursos/javascript/05/images/aplicacao_dados_desktop.png",
            "tablet": "/vitrine-ml5/mlab5/cursos/javascript/05/images/aplicacao_dados_tablet.png",
            "mobile": "http://localhost:3000/vitrine-ml5/mlab5/cursos/javascript/05/images/aplicacao_dados_mobile.png"
          }
        }
      ],
      "exercise": {
        "headline": "Exerc√≠cio",
        "text": "Crie uma aplica√ß√£o ass√≠ncrona completa com carregamento de dados:",
        "steps": [
          "T√≠tulo = Aplica√ß√£o Ass√≠ncrona com Carregamento de Dados",
          "Implemente sistema de estado reativo",
          "Use Fetch API para requisi√ß√µes HTTP",
          "Implemente cache local com TTL",
          "Trate erros com retry autom√°tico",
          "Adicione loading states e feedback visual",
          "Crie interface responsiva e acess√≠vel"
        ]
      },
      "controls": {
        "templates": [
          "/vitrine-ml5/mlab5/templates/classico.html",
          "/vitrine-ml5/mlab5/templates/moderno.html",
          "/vitrine-ml5/mlab5/templates/dark_mode.html"
        ],
        "styles": {
          "background": "#ffffff",
          "foreground": "#000000",
          "fontFamily": "Arial, sans-serif"
        }
      },
      "playground": {
        "url": "http://localhost:3000/vitrine-ml5/mlab5/playground"
      }
    }
  },
  {
    "course": {
      "name": "üîó Integra√ß√£o HTML5, CSS3 e APIs",
      "image": {
        "desktop": "/vitrine-ml5/mlab5/images/banner_frontend_desktop.png",
        "tablet": "/vitrine-ml5/mlab5/images/banner_frontend_tablet.png",
        "mobile": "http://localhost:3000/vitrine-ml5/mlab5/images/banner_frontend_mobile.png"
      },
      "articles": [
        {
          "position": 1,
          "image": {
            "desktop": "/vitrine-ml5/mlab5/images/banner_frontend_desktop.png",
            "tablet": "/vitrine-ml5/mlab5/images/banner_frontend_tablet.png",
            "mobile": "http://localhost:3000/vitrine-ml5/mlab5/images/banner_frontend_mobile.png"
          }
        },
        {
          "position": 2,
          "headline": "Web Storage - LocalStorage e SessionStorage",
          "alternativeHeadline": "Caracter√≠sticas do Web Storage:",
          "text": "O Web Storage API permite armazenar dados no navegador de forma persistente (localStorage) ou tempor√°ria (sessionStorage), oferecendo uma alternativa moderna aos cookies.",
          "list": [
            "localStorage: Persiste entre sess√µes",
            "sessionStorage: Limpo ao fechar aba",
            "Maior capacidade que cookies (5-10MB)",
            "Apenas strings (JSON para objetos)",
            "S√≠ncrono (n√£o bloqueia UI)"
          ]
        },
        {
          "position": 3,
          "image": {
            "desktop": "/vitrine-ml5/mlab5/cursos/javascript/06/images/web_storage_desktop.png",
            "tablet": "/vitrine-ml5/mlab5/cursos/javascript/06/images/web_storage_tablet.png",
            "mobile": "http://localhost:3000/vitrine-ml5/mlab5/cursos/javascript/06/images/web_storage_mobile.png"
          }
        },
        {
          "position": 4,
          "headline": "LocalStorage - Armazenamento Persistente",
          "alternativeHeadline": "M√©todos do LocalStorage:",
          "text": "O localStorage permite armazenar dados que persistem entre sess√µes do navegador, ideal para configura√ß√µes de usu√°rio, cache de dados e estado da aplica√ß√£o.",
          "list": [
            "setItem(key, value) - Armazenar dados",
            "getItem(key) - Recuperar dados",
            "removeItem(key) - Remover item",
            "clear() - Limpar tudo",
            "key(index) - Obter chave por √≠ndice"
          ]
        },
        {
          "position": 5,
          "alternativeHeadline": "Exemplos de LocalStorage:"
        },
        {
          "position": 6,
          "headline": "Geolocaliza√ß√£o - API de Localiza√ß√£o",
          "alternativeHeadline": "Caracter√≠sticas da Geolocaliza√ß√£o:",
          "text": "A API de Geolocaliza√ß√£o permite que aplica√ß√µes web acessem a localiza√ß√£o geogr√°fica do usu√°rio, oferecendo funcionalidades como mapas, clima local e servi√ßos baseados em localiza√ß√£o.",
          "list": [
            "Require permiss√£o do usu√°rio",
            "Precis√£o vari√°vel (GPS, rede, IP)",
            "Suporte a watchPosition",
            "Informa√ß√µes de altitude e velocidade",
            "Tratamento de erros robusto"
          ]
        },
        {
          "position": 7,
          "alternativeHeadline": "Exemplos de Geolocaliza√ß√£o:"
        },
        {
          "position": 8,
          "headline": "Canvas API - Gr√°ficos e Anima√ß√µes",
          "alternativeHeadline": "Capacidades do Canvas:",
          "text": "O Canvas API permite desenhar gr√°ficos, criar anima√ß√µes e manipular pixels diretamente no navegador, oferecendo controle total sobre elementos visuais.",
          "list": [
            "Desenho 2D e 3D (WebGL)",
            "Anima√ß√µes complexas",
            "Manipula√ß√£o de pixels",
            "Processamento de imagens",
            "Jogos e visualiza√ß√µes"
          ]
        },
        {
          "position": 9,
          "alternativeHeadline": "Exemplos de Canvas:",
          "image": {
            "desktop": "/vitrine-ml5/mlab5/cursos/javascript/06/images/canvas_api_desktop.png",
            "tablet": "/vitrine-ml5/mlab5/cursos/javascript/06/images/canvas_api_tablet.png",
            "mobile": "http://localhost:3000/vitrine-ml5/mlab5/cursos/javascript/06/images/canvas_api_mobile.png"
          }
        },
        {
          "position": 10,
          "headline": "APIs Modernas do Navegador",
          "alternativeHeadline": "APIs Principais:",
          "text": "JavaScript moderno oferece acesso a diversas APIs do navegador que permitem funcionalidades avan√ßadas como acesso ao clipboard, c√¢mera, microfone e muito mais.",
          "list": [
            "Clipboard API: Copiar/colar texto e imagens",
            "File API: Manipula√ß√£o de arquivos",
            "MediaDevices: C√¢mera e microfone",
            "Web Workers: Processamento em background",
            "Intersection Observer: Detec√ß√£o de scroll"
          ]
        },
        {
          "position": 11,
          "alternativeHeadline": "Exemplos de APIs Modernas:"
        },
        {
          "position": 12,
          "headline": "Pr√°tica: Aplica√ß√£o Integrada com HTML5",
          "alternativeHeadline": "Objetivos da Pr√°tica:",
          "text": "Vamos criar uma aplica√ß√£o completa que integra todas as APIs modernas aprendidas, demonstrando o poder da integra√ß√£o JavaScript com HTML5 e CSS3.",
          "list": [
            "Integrar LocalStorage para persist√™ncia",
            "Usar Geolocaliza√ß√£o para mapas",
            "Implementar Canvas para visualiza√ß√µes",
            "Aplicar APIs modernas do navegador",
            "Criar interface responsiva"
          ]
        },
        {
          "position": 13,
          "headline": "${item.titulo}",
          "alternativeHeadline": "Aplica√ß√£o Integrada Completa:",
          "text": "Nenhum dado salvo ainda.",
          "image": {
            "desktop": "/vitrine-ml5/mlab5/cursos/javascript/06/images/app_integrada_desktop.png",
            "tablet": "/vitrine-ml5/mlab5/cursos/javascript/06/images/app_integrada_tablet.png",
            "mobile": "http://localhost:3000/vitrine-ml5/mlab5/cursos/javascript/06/images/app_integrada_mobile.png"
          }
        }
      ],
      "exercise": {
        "headline": "Exerc√≠cio",
        "text": "Crie uma aplica√ß√£o web integrada com HTML5, CSS3 e APIs modernas:",
        "steps": [
          "T√≠tulo = Aplica√ß√£o Web Integrada com HTML5 e APIs",
          "Implemente LocalStorage para persist√™ncia de dados",
          "Use Geolocaliza√ß√£o para funcionalidades baseadas em localiza√ß√£o",
          "Crie visualiza√ß√µes interativas com Canvas",
          "Integre APIs modernas (Clipboard, File, Camera)",
          "Implemente sistema de notifica√ß√µes",
          "Crie interface responsiva e acess√≠vel"
        ]
      },
      "controls": {
        "templates": [
          "/vitrine-ml5/mlab5/templates/classico.html",
          "/vitrine-ml5/mlab5/templates/moderno.html",
          "/vitrine-ml5/mlab5/templates/dark_mode.html"
        ],
        "styles": {
          "background": "#ffffff",
          "foreground": "#000000",
          "fontFamily": "Arial, sans-serif"
        }
      },
      "playground": {
        "url": "http://localhost:3000/vitrine-ml5/mlab5/playground"
      }
    }
  },
  {
    "course": {
      "name": "üèóÔ∏è Boas Pr√°ticas e Arquitetura Moderna",
      "image": {
        "desktop": "/vitrine-ml5/mlab5/images/banner_frontend_desktop.png",
        "tablet": "/vitrine-ml5/mlab5/images/banner_frontend_tablet.png",
        "mobile": "http://localhost:3000/vitrine-ml5/mlab5/images/banner_frontend_mobile.png"
      },
      "articles": [
        {
          "position": 1,
          "image": {
            "desktop": "/vitrine-ml5/mlab5/images/banner_frontend_desktop.png",
            "tablet": "/vitrine-ml5/mlab5/images/banner_frontend_tablet.png",
            "mobile": "http://localhost:3000/vitrine-ml5/mlab5/images/banner_frontend_mobile.png"
          }
        },
        {
          "position": 2,
          "headline": "Modulariza√ß√£o - Import/Export",
          "alternativeHeadline": "Vantagens da Modulariza√ß√£o:",
          "text": "A modulariza√ß√£o √© fundamental para criar c√≥digo JavaScript escal√°vel e manuten√≠vel. O ES6 introduziu um sistema de m√≥dulos que permite dividir c√≥digo em arquivos separados e reutiliz√°veis.",
          "list": [
            "Reutiliza√ß√£o: C√≥digo compartilhado entre projetos",
            "Manutenibilidade: Facilita manuten√ß√£o e debugging",
            "Organiza√ß√£o: Estrutura clara e l√≥gica",
            "Testabilidade: M√≥dulos isolados s√£o mais f√°ceis de testar",
            "Performance: Carregamento otimizado e tree-shaking"
          ]
        },
        {
          "position": 3,
          "image": {
            "desktop": "/vitrine-ml5/mlab5/cursos/javascript/07/images/modularizacao_desktop.png",
            "tablet": "/vitrine-ml5/mlab5/cursos/javascript/07/images/modularizacao_tablet.png",
            "mobile": "http://localhost:3000/vitrine-ml5/mlab5/cursos/javascript/07/images/modularizacao_mobile.png"
          }
        },
        {
          "position": 4,
          "headline": "Sistema de M√≥dulos ES6",
          "alternativeHeadline": "Tipos de Export/Import:",
          "text": "O sistema de m√≥dulos ES6 oferece sintaxe declarativa para importar e exportar funcionalidades entre arquivos, criando uma arquitetura modular robusta.",
          "list": [
            "Named exports: M√∫ltiplas exporta√ß√µes nomeadas",
            "Default export: Exporta√ß√£o principal do m√≥dulo",
            "Namespace import: Importar tudo como objeto",
            "Re-export: Re-exportar de outros m√≥dulos"
          ]
        },
        {
          "position": 5,
          "alternativeHeadline": "Exemplos de M√≥dulos:"
        },
        {
          "position": 6,
          "headline": "Padr√µes de C√≥digo e Clean Code",
          "alternativeHeadline": "Princ√≠pios do Clean Code:",
          "text": "Padr√µes de c√≥digo consistentes e princ√≠pios de Clean Code s√£o essenciais para criar aplica√ß√µes JavaScript manuten√≠veis e escal√°veis.",
          "list": [
            "Nomes significativos: Vari√°veis e fun√ß√µes descritivas",
            "Fun√ß√µes pequenas: Uma responsabilidade por fun√ß√£o",
            "DRY: Don't Repeat Yourself",
            "SRP: Single Responsibility Principle",
            "Coment√°rios √∫teis: Explicar o \"porqu√™\", n√£o o \"o que\""
          ]
        },
        {
          "position": 7,
          "alternativeHeadline": "Exemplos de Clean Code:"
        },
        {
          "position": 8,
          "headline": "Padr√£o MVC e Componentiza√ß√£o",
          "alternativeHeadline": "Componentes do MVC:",
          "text": "O padr√£o MVC (Model-View-Controller) e a componentiza√ß√£o s√£o fundamentais para criar arquiteturas JavaScript escal√°veis e manuten√≠veis.",
          "list": [
            "Model: Dados e l√≥gica de neg√≥cio",
            "View: Interface do usu√°rio",
            "Controller: Coordena√ß√£o entre Model e View",
            "Componentes: Unidades reutiliz√°veis e independentes"
          ]
        },
        {
          "position": 9,
          "headline": "${usuario.nome}",
          "alternativeHeadline": "Exemplos de MVC e Componentiza√ß√£o:",
          "text": "Nenhum usu√°rio cadastrado."
        },
        {
          "position": 10,
          "headline": "Projeto Final - Lista de Tarefas",
          "alternativeHeadline": "Funcionalidades da Aplica√ß√£o:",
          "text": "Vamos criar uma aplica√ß√£o completa de lista de tarefas que demonstra todos os conceitos aprendidos: modulariza√ß√£o, MVC, componentiza√ß√£o, boas pr√°ticas e persist√™ncia local.",
          "list": [
            "Adicionar, editar e remover tarefas",
            "Marcar tarefas como conclu√≠das",
            "Filtrar tarefas por status",
            "Persist√™ncia local com LocalStorage",
            "Interface responsiva e acess√≠vel",
            "Anima√ß√µes e feedback visual"
          ]
        },
        {
          "position": 11,
          "alternativeHeadline": "Projeto Final Completo:",
          "text": "üéâ Nenhuma tarefa encontrada!",
          "image": {
            "desktop": "/vitrine-ml5/mlab5/cursos/javascript/07/images/projeto_final_desktop.png",
            "tablet": "/vitrine-ml5/mlab5/cursos/javascript/07/images/projeto_final_tablet.png",
            "mobile": "http://localhost:3000/vitrine-ml5/mlab5/cursos/javascript/07/images/projeto_final_mobile.png"
          }
        }
      ],
      "exercise": {
        "headline": "Exerc√≠cio",
        "text": "Crie uma aplica√ß√£o web completa seguindo boas pr√°ticas e arquitetura moderna:",
        "steps": [
          "T√≠tulo = Aplica√ß√£o Web com Arquitetura Moderna",
          "Implemente modulariza√ß√£o com ES6 modules",
          "Use padr√£o MVC para organiza√ß√£o",
          "Aplique princ√≠pios de Clean Code",
          "Crie componentes reutiliz√°veis",
          "Implemente persist√™ncia local",
          "Adicione testes unit√°rios b√°sicos"
        ]
      },
      "controls": {
        "templates": [
          "/vitrine-ml5/mlab5/templates/classico.html",
          "/vitrine-ml5/mlab5/templates/moderno.html",
          "/vitrine-ml5/mlab5/templates/dark_mode.html"
        ],
        "styles": {
          "background": "#ffffff",
          "foreground": "#000000",
          "fontFamily": "Arial, sans-serif"
        }
      },
      "playground": {
        "url": "http://localhost:3000/vitrine-ml5/mlab5/playground"
      }
    }
  }
]